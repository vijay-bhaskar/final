{"ast":null,"code":"import _objectSpread from\"C:/Users/somav/frontend/hapsync-frontend-1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:/Users/somav/frontend/hapsync-frontend-1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{useForm,Controller}from'react-hook-form';import Input from'@material-ui/core/input';import Select from'react-select';import ReactDatePicker from'react-datepicker';import'react-datepicker/dist/react-datepicker.css';import'./createEvent.scss';import CreatableSelect from'react-select/creatable';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var CreateEventComponent=function CreateEventComponent(_ref){var events=_ref.events,activityTypes=_ref.activityTypes,fetchEventTypes=_ref.fetchEventTypes,fetchActivities=_ref.fetchActivities,CreateEvent=_ref.CreateEvent;useEffect(function(){fetchEventTypes();},[fetchEventTypes]);var eventTypes=events.eventTypes;var _useState=useState(),_useState2=_slicedToArray(_useState,2),evntTypeId=_useState2[0],setEvntTypeId=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),actvts=_useState4[0],setActvts=_useState4[1];var _useForm=useForm(),handleSubmit=_useForm.handleSubmit,control=_useForm.control;var onEventTypeChange=function onEventTypeChange(eventTypeId){if(eventTypeId!=undefined){setEvntTypeId(eventTypeId);fetchActivities(eventTypeId);setActvts([]);}console.log(eventTypeId);};var handleActivitiesCreate=function handleActivitiesCreate(activityTypes){var activities=[];activityTypes.forEach(function(actvty){var activity={activityTypeId:actvty.activityTypeId,cost:actvty.cost,createdDate:new Date(),owner:1,dueDate:new Date()};activities.push(activity);});setActvts(activities);console.log(actvts);};var onSubmit=function onSubmit(data){console.log(data);var eventData={name:data.name,eventTypeId:evntTypeId?evntTypeId:0,userId:1,date:data.date,location:data.location,createdDate:new Date(),owner:data.owner,budget:data.budget,activities:actvts};CreateEvent(eventData);};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"form\",{onSubmit:handleSubmit(onSubmit),className:\"form\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"eventform\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"section\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Name\"}),/*#__PURE__*/_jsx(Controller,{name:\"name\",control:control,defaultValue:\"\",render:function render(_ref2){var field=_ref2.field;return/*#__PURE__*/_jsx(Input,_objectSpread({disableUnderline:true,className:\"input\"},field));}})]})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"section\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Event Type\"}),/*#__PURE__*/_jsx(Controller,{name:\"eventTypeId\",control:control,render:function render(){return/*#__PURE__*/_jsx(Select,{defaultValue:eventTypes[0],isClearable:true,options:eventTypes,getOptionLabel:function getOptionLabel(option){return option.eventTypeName;},getOptionValue:function getOptionValue(option){return''+option.eventTypeId;},onChange:function onChange(e){onEventTypeChange(e===null||e===void 0?void 0:e.eventTypeId);},className:\"input\"});}})]})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"section\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Where\"}),/*#__PURE__*/_jsx(Controller,{name:\"location\",control:control,defaultValue:\"\",render:function render(_ref3){var field=_ref3.field;return/*#__PURE__*/_jsx(Input,_objectSpread(_objectSpread({disableUnderline:true},field),{},{className:\"input\"}));}})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"event-date-cost\",children:/*#__PURE__*/_jsxs(\"section\",{children:[\"When\",/*#__PURE__*/_jsx(Controller,{name:\"date\",control:control,render:function render(_ref4){var field=_ref4.field;return/*#__PURE__*/_jsx(ReactDatePicker,{className:\"date-field\",placeholderText:\"Time\",showPreviousMonths:true,onChange:function onChange(e){return field.onChange(e);},selected:field.value,minDate:new Date(),calendarClassName:\"event-date\",dateFormat:\"MM-dd-yyyy\"});}}),\"Cost\",/*#__PURE__*/_jsx(Controller,{name:\"budget\",control:control,defaultValue:\"\",render:function render(_ref5){var field=_ref5.field;return/*#__PURE__*/_jsx(Input,_objectSpread(_objectSpread({disableUnderline:true},field),{},{className:\"event-cost\"}));}})]})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"section\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Who\"}),/*#__PURE__*/_jsx(Controller,{name:\"owner\",control:control,defaultValue:\"\",render:function render(_ref6){var field=_ref6.field;return/*#__PURE__*/_jsx(Input,_objectSpread(_objectSpread({disableUnderline:true},field),{},{className:\"input\"}));}})]})}),activityTypes&&activityTypes.activities&&/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"section\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Activity Type\"}),/*#__PURE__*/_jsx(Controller,{name:\"activities\",control:control,render:function render(){return/*#__PURE__*/_jsx(CreatableSelect,{defaultValue:activityTypes.activities[0],isClearable:true,isMulti:true,options:activityTypes.activities,getOptionLabel:function getOptionLabel(option){return option.activityTypeName;},getOptionValue:function getOptionValue(option){return''+option.activityTypeId;},className:\"input\",onChange:function onChange(e){return handleActivitiesCreate(e);}});}})]})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"submit\",className:\"button\"})})]})})});};export default CreateEventComponent;","map":{"version":3,"sources":["C:/Users/somav/frontend/hapsync-frontend-1/src/Events/CreateEvents/createEvent.tsx"],"names":["React","useEffect","useState","useForm","Controller","Input","Select","ReactDatePicker","CreatableSelect","CreateEventComponent","events","activityTypes","fetchEventTypes","fetchActivities","CreateEvent","eventTypes","evntTypeId","setEvntTypeId","actvts","setActvts","handleSubmit","control","onEventTypeChange","eventTypeId","undefined","console","log","handleActivitiesCreate","activities","forEach","actvty","activity","activityTypeId","cost","createdDate","Date","owner","dueDate","push","onSubmit","data","eventData","name","userId","date","location","budget","field","option","eventTypeName","e","onChange","value","activityTypeName"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { ActivityRequestModel, CreateEventRequestModel, EventFormData } from '../eventModels';\nimport Input from '@material-ui/core/input';\nimport Select from 'react-select';\nimport { EventTypesState } from '../../Suggestions/EventTypes/EventTypeModels';\nimport ReactDatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './createEvent.scss';\nimport CreatableSelect from 'react-select/creatable';\nimport { ActivitiesState, Activity } from '../../Suggestions/Activities/activityModels';\n\ntype Props = {\n    fetchEventTypes: () => void;\n    events: EventTypesState;\n    fetchActivities: (id: number) => void;\n    activityTypes: ActivitiesState;\n    CreateEvent: (data: CreateEventRequestModel) => void;\n};\n\nconst CreateEventComponent: React.FC<Props> = ({\n    events,\n    activityTypes,\n    fetchEventTypes,\n    fetchActivities,\n    CreateEvent,\n}) => {\n    useEffect(() => {\n        fetchEventTypes();\n    }, [fetchEventTypes]);\n\n    const eventTypes = events.eventTypes;\n    const [evntTypeId, setEvntTypeId] = useState<number>();\n    const [actvts, setActvts] = useState<ActivityRequestModel[]>();\n    const { handleSubmit, control } = useForm<EventFormData>();\n\n    const onEventTypeChange = (eventTypeId: number | undefined) => {\n        if (eventTypeId != undefined) {\n            setEvntTypeId(eventTypeId);\n            fetchActivities(eventTypeId);\n            setActvts([]);\n        }\n        console.log(eventTypeId);\n    };\n\n    const handleActivitiesCreate = (activityTypes: any) => {\n        const activities: ActivityRequestModel[] = [];\n        activityTypes.forEach((actvty: Activity) => {\n            const activity: ActivityRequestModel = {\n                activityTypeId: actvty.activityTypeId,\n                cost: actvty.cost,\n                createdDate: new Date(),\n                owner: 1,\n                dueDate: new Date(),\n            };\n            activities.push(activity);\n        });\n        setActvts(activities);\n        console.log(actvts);\n    };\n\n    const onSubmit = (data: EventFormData) => {\n        console.log(data);\n        const eventData: CreateEventRequestModel = {\n            name: data.name,\n            eventTypeId: evntTypeId ? evntTypeId : 0,\n            userId: 1,\n            date: data.date,\n            location: data.location,\n            createdDate: new Date(),\n            owner: data.owner,\n            budget: data.budget,\n            activities: actvts,\n        };\n\n        CreateEvent(eventData);\n    };\n\n    return (\n        <>\n            <form onSubmit={handleSubmit(onSubmit)} className=\"form\">\n                <div className=\"eventform\">\n                    <div>\n                        <section>\n                            <label>Name</label>\n                            <Controller\n                                name=\"name\"\n                                control={control}\n                                defaultValue=\"\"\n                                render={({ field }) => <Input disableUnderline className=\"input\" {...field} />}\n                            />\n                        </section>\n                    </div>\n                    <div>\n                        <section>\n                            <label>Event Type</label>\n                            <Controller\n                                name=\"eventTypeId\"\n                                control={control}\n                                render={() => (\n                                    <Select\n                                        defaultValue={eventTypes[0]}\n                                        isClearable\n                                        options={eventTypes}\n                                        getOptionLabel={(option) => option.eventTypeName}\n                                        getOptionValue={(option) => '' + option.eventTypeId}\n                                        onChange={(e) => {\n                                            onEventTypeChange(e?.eventTypeId);\n                                        }}\n                                        className=\"input\"\n                                    />\n                                )}\n                            />\n                        </section>\n                    </div>\n\n                    <div>\n                        <section>\n                            <label>Where</label>\n                            <Controller\n                                name=\"location\"\n                                control={control}\n                                defaultValue=\"\"\n                                render={({ field }) => <Input disableUnderline {...field} className=\"input\" />}\n                            />\n                        </section>\n                    </div>\n                    <div className=\"event-date-cost\">\n                        <section>\n                            When\n                            <Controller\n                                name=\"date\"\n                                control={control}\n                                render={({ field }) => (\n                                    <ReactDatePicker\n                                        className=\"date-field\"\n                                        placeholderText=\"Time\"\n                                        showPreviousMonths\n                                        onChange={(e) => field.onChange(e)}\n                                        selected={field.value}\n                                        minDate={new Date()}\n                                        calendarClassName=\"event-date\"\n                                        dateFormat=\"MM-dd-yyyy\"\n                                    />\n                                )}\n                            />\n                            Cost\n                            <Controller\n                                name=\"budget\"\n                                control={control}\n                                defaultValue=\"\"\n                                render={({ field }) => <Input disableUnderline {...field} className=\"event-cost\" />}\n                            />\n                        </section>\n                    </div>\n                    <div>\n                        <section>\n                            <label>Who</label>\n                            <Controller\n                                name=\"owner\"\n                                control={control}\n                                defaultValue=\"\"\n                                render={({ field }) => <Input disableUnderline {...field} className=\"input\" />}\n                            />\n                        </section>\n                    </div>\n                    {activityTypes && activityTypes.activities && (\n                        <div>\n                            <section>\n                                <label>Activity Type</label>\n                                <Controller\n                                    name=\"activities\"\n                                    control={control}\n                                    render={() => (\n                                        <CreatableSelect\n                                            defaultValue={activityTypes.activities[0]}\n                                            isClearable\n                                            isMulti\n                                            options={activityTypes.activities}\n                                            getOptionLabel={(option) => option.activityTypeName}\n                                            getOptionValue={(option) => '' + option.activityTypeId}\n                                            className=\"input\"\n                                            onChange={(e) => handleActivitiesCreate(e)}\n                                        />\n                                    )}\n                                />\n                            </section>\n                        </div>\n                    )}\n\n                    <div>\n                        <input type=\"submit\" className=\"button\" />\n                    </div>\n                </div>\n            </form>\n        </>\n    );\n};\n\nexport default CreateEventComponent;\n"]},"metadata":{},"sourceType":"module"}