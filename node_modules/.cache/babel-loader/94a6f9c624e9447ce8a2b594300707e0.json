{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/somav/frontend/hapsync-frontend-1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(createEvent),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(createEventSaga);import axios from'axios';import{all,call,put,takeLatest}from'redux-saga/effects';import{CreateEventSuccess}from'./createEventActions';import{CREATE_EVENT}from'./createEventConstants';var createEventCall=function createEventCall(data){return axios.post('http://localhost:8080/pulp-events/event',data);};export function createEvent(_ref){var data,response;return _regeneratorRuntime.wrap(function createEvent$(_context){while(1){switch(_context.prev=_context.next){case 0:data=_ref.data;_context.prev=1;_context.next=4;return call(function(){return createEventCall(data);});case 4:response=_context.sent;_context.next=7;return put(CreateEventSuccess(response));case 7:_context.next=11;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](1);case 11:case\"end\":return _context.stop();}}},_marked,null,[[1,9]]);}export function createEventSaga(){return _regeneratorRuntime.wrap(function createEventSaga$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return all([takeLatest(CREATE_EVENT,createEvent)]);case 2:case\"end\":return _context2.stop();}}},_marked2);}","map":{"version":3,"sources":["C:/Users/somav/frontend/hapsync-frontend-1/src/Events/CreateEvents/store/createEventSaga.ts"],"names":["createEvent","createEventSaga","axios","all","call","put","takeLatest","CreateEventSuccess","CREATE_EVENT","createEventCall","data","post","response"],"mappings":"0MAWiBA,W,iDAUAC,e,EArBjB,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,CAAcC,IAAd,CAAoBC,GAApB,CAAyBC,UAAzB,KAA2C,oBAA3C,CACA,OAASC,kBAAT,KAAmC,sBAAnC,CACA,OAASC,YAAT,KAA6B,wBAA7B,CAIA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,IAAD,CAAmC,CACvD,MAAOR,CAAAA,KAAK,CAACS,IAAN,CAAmB,yCAAnB,CAA8DD,IAA9D,CAAP,CACH,CAFD,CAIA,MAAO,SAAUV,CAAAA,WAAV,6IAAwBU,IAAxB,MAAwBA,IAAxB,iCAE0B,MAAMN,CAAAA,IAAI,CAAC,UAAM,CACtC,MAAOK,CAAAA,eAAe,CAACC,IAAD,CAAtB,CACH,CAFkC,CAAV,CAF1B,OAEOE,QAFP,+BAMC,MAAMP,CAAAA,GAAG,CAACE,kBAAkB,CAACK,QAAD,CAAnB,CAAT,CAND,0JAUP,MAAO,SAAUX,CAAAA,eAAV,+IACH,MAAME,CAAAA,GAAG,CAAC,CAACG,UAAU,CAACE,YAAD,CAAeR,WAAf,CAAX,CAAD,CAAT,CADG","sourcesContent":["import axios from 'axios';\nimport { all, call, put, takeLatest } from 'redux-saga/effects';\nimport { CreateEventSuccess } from './createEventActions';\nimport { CREATE_EVENT } from './createEventConstants';\nimport { CreateEventRequestModel } from '../../eventModels';\nimport { AnyAction } from 'redux';\n\nconst createEventCall = (data: CreateEventRequestModel) => {\n    return axios.post<string>('http://localhost:8080/pulp-events/event', data);\n};\n\nexport function* createEvent({ data }: AnyAction) {\n    try {\n        const response: string = yield call(() => {\n            return createEventCall(data);\n        });\n\n        yield put(CreateEventSuccess(response));\n    } catch (e) {}\n}\n\nexport function* createEventSaga() {\n    yield all([takeLatest(CREATE_EVENT, createEvent)]);\n}\n"]},"metadata":{},"sourceType":"module"}